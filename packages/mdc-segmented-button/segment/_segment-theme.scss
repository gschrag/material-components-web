//
// Copyright 2020 Google Inc.
//
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
//
// The above copyright notice and this permission notice shall be included in
// all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
// THE SOFTWARE.
//

// Theme: Variables, functions, and mixins required to theme component segment

@use "@material/feature-targeting/functions" as feature-targeting-functions;
@use "@material/feature-targeting/mixins" as feature-targeting-mixins;
@use "@material/theme/variables" as theme-variables;
@use "@material/theme/custom-properties";

$on-surface: theme-variables.$on-surface;
$surface: theme-variables.$surface;
$primary: theme-variables.$primary;

$unselected-ink-color: rgba($on-surface, 0.6);
$unselected-outline-color: rgba($on-surface, 0.12);
$unselected-container-fill-color: rgba($surface, 1);
$selected-ink-color: rgba($primary, 1);
$selected-outline-color: $unselected-outline-color;
$selected-container-fill-color: rgba($primary, 0.08);

$height: 36px;
$min-width: 48px;
$horizontal-padding: 12px;
$border-width: 1px;
$border-radius: 4px;
$icon-width: 24px;
$icon-font-size: 18px;
$label-padding: 6px;

@mixin unselected-ink-color($color, $query: feature-targeting-functions.all()) {
  .mdc-segmented-button__segment {
    $property: custom-properties.create(
      --mdc-segmented-button-unselected-ink-color,
      $color
    );
    @include _ink-color($property, $query);
  }
}

@mixin unselected-outline-color(
  $color,
  $query: feature-targeting-functions.all()
) {
  .mdc-segmented-button__segment {
    $property: custom-properties.create(
      --mdc-segmented-button-unselected-outline-color,
      $color
    );
    @include _outline-color($property, $query);
  }
}

@mixin unselected-container-fill-color(
  $color,
  $query: feature-targeting-functions.all()
) {
  .mdc-segmented-button__segment {
    $property: custom-properties.create(
      --mdc-segmented-button-unselected-container-fill-color,
      $color
    );
    @include _container-fill-color($property, $query);
  }
}

@mixin selected-ink-color($color, $query: feature-targeting-functions.all()) {
  .mdc-segmented-button__segment--selected {
    $property: custom-properties.create(
      --mdc-segmented-button-selected-ink-color,
      $color
    );
    @include _ink-color($property, $query);
  }
}

@mixin selected-outline-color(
  $color,
  $query: feature-targeting-functions.all()
) {
  .mdc-segmented-button__segment--selected {
    $property: custom-properties.create(
      --mdc-segmented-button-selected-outline-color,
      $color
    );
    @include _outline-color($property, $query);
  }
}

@mixin selected-container-fill-color(
  $color,
  $query: feature-targeting-functions.all()
) {
  .mdc-segmented-button__segment--selected {
    $property: custom-properties.create(
      --mdc-segmented-button-selected-container-fill-color,
      $color
    );
    @include _container-fill-color($property, $query);
  }
}

@mixin _ink-color($property, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);

  @include feature-targeting-mixins.targets($feat-color) {
    @include custom-properties.apply('color', $property);
  }
}

@mixin _outline-color($property, $query: feature-targeting-functions.all()) {
  $feat-color: feature-targeting-functions.create-target($query, color);

  @include feature-targeting-mixins.targets($feat-color) {
    @include custom-properties.apply('border-color', $property);
  }
}

@mixin _container-fill-color(
  $property,
  $query: feature-targeting-functions.all()
) {
  $feat-color: feature-targeting-functions.create-target($query, color);

  @include feature-targeting-mixins.targets($feat-color) {
    @include custom-properties.apply('background-color', $property);
  }
}
